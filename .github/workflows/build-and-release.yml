on:
  push:
    tags:
      - '*'

name: Build and release

jobs:
  x86_64:
    name: x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build
        run: |
          make
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./axisdiscovery-${{ steps.get_version.outputs.VERSION }}-x86_64-linux-gnu
          asset_name: axisdiscovery-${{ steps.get_version.outputs.VERSION }}-x86_64-linux-gnu
          asset_content_type: application/octet-stream

  armv7hf:
    name: armv7hf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Install compiler
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y gcc-arm-linux-gnueabihf
      - name: Build
        run: |
          CC=arm-linux-gnueabihf-gcc make
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./axisdiscovery-${{ steps.get_version.outputs.VERSION }}-arm-linux-gnueabihf
          asset_name: axisdiscovery-${{ steps.get_version.outputs.VERSION }}-arm-linux-gnueabihf
          asset_content_type: application/octet-stream
